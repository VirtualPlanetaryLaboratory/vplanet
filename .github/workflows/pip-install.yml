name: pip-install
on:
  release:
    types: [published]

jobs:
  build_wheels:
    name: '${{ matrix.os }}:python-${{ matrix.python-version }}'
    runs-on: ubuntu-latest
    strategy:
      matrix:
        os: ubuntu-22.04
        python-version: 3.9
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: true
          fetch-depth: 0

      - uses: actions/setup-python@v5
        name: Install Python
        with:
          python-version: ${{ matrix.python-version }}

      - uses: ilammy/msvc-dev-cmd@v1

      - name: Install cibuildwheel
        run: |
          python -m pip install cibuildwheel==2.12.1

      - name: Build wheel
        run: |
          if [[ "$RUNNER_OS" == "Linux" || "$RUNNER_OS" == "macOS" ]]; then
            python -m cibuildwheel --output-dir wheelhouse
          else
            echo "$RUNNER_OS not supported"
            exit 1
          fi           
        env:
          CIBW_BUILD: 'cp3?-*'
          CIBW_SKIP: '*-manylinux_i686' 
          CIBW_MANYLINUX_X86_64_IMAGE: manylinux2014
        shell: bash

      - uses: actions/upload-artifact@v4
        with:
          path: ./wheelhouse/*.whl

  build_sdist:
    name: Build source distribution
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: true
          fetch-depth: 0

      - uses: actions/setup-python@v5
        name: Install Python
        with:
          python-version: ${{ matrix.python }}

      - name: Build sdist
        run: python setup.py sdist

      - uses: actions/upload-artifact@v3
        with:
          path: dist/*.tar.gz

  upload_pypi:
    needs: [build_wheels, build_sdist]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/download-artifact@v4
        with:
          name: artifact
          path: dist

      # Only push to PyPI if we're on the public repo!
      - uses: pypa/gh-action-pypi-publish@release/v1
        if: (!github.event.release.prerelease) && github.event_name == 'release' && github.event.action == 'published' && github.repository == 'VirtualPlanetaryLaboratory/vplanet'
        with:
          user: __token__
          password: ${{ secrets.pypi_password }}
